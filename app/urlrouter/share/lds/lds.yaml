resources:
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: xshop_http
  stat_prefix:  xshop_http
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10000
  per_connection_buffer_limit_bytes: 2097152
  filter_chains:
  - filters:
      name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: xshop_http_connect
        server_name: xshop-http
        merge_slashes: true
        normalize_path: true
        use_remote_address: true
        request_timeout: 300s
        stream_idle_timeout: 600s 
        delayed_close_timeout: 5s
        always_set_request_id_in_response: true
        preserve_external_request_id: true
        access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                   json_format:
                      start_time: "%START_TIME(%Y-%m-%d %H+8:%M:%S)%"
                      request_id: "%REQ(X-REQUEST-ID)%"
                      response_code: "%RESPONSE_CODE%"
                      request: "%REQ(:METHOD)%   %REQ_WITHOUT_QUERY(X-ENVOY-ORIGINAL-PATH?:PATH)%   %PROTOCOL%"
                      duration: "%DURATION%"
                      service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                      forward: "%REQ(X-FORWARDED-FOR)%"
                      agent: "%REQ(USER-AGENT)%"
                      host: "%REQ(:AUTHORITY)%"
                      upstream_host: "%UPSTREAM_HOST%"
                   formatters:
                   - name: envoy.formatter.req_without_query
                     typed_config:
                      "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery     
        http_filters:
        - name: envoy.filters.http.ext_authz
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
            transport_api_version: 2
            # filter_enabled_metadata: {'filter': 'envoy.filters.http.ext_authz', 'path': [{'key': 'path'}], 'value': {'string_match': {'prefix': '/mgr/v1'}}}
            grpc_service: { 'envoy_grpc': { 'cluster_name': 'biz_user_grpc' }, 'timeout': '3s' }
            with_request_body: { 'max_request_bytes': 65535, 'allow_partial_message': false, 'pack_as_bytes': True }
            clear_route_cache: true
            status_on_error:
              code: ServiceUnavailable
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        route_config:
          name: xshop_biz_router
          virtual_hosts:
          - name: xshop_biz_mgr
            domains:  ["*"]
            routes:
            - match:
                safe_regex:
                  google_re2: { }
                  regex: ^(/mgr/v1).*
              typed_per_filter_config:
                envoy.filters.http.ext_authz:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                  disable: false
                  check_settings:
                    context_extensions:
                      "upstream_cluster": "biz_mgr"
              route:
                 cluster: biz_mgr
                 idle_timeout: 60s
                 timeout: 300s
                 retry_policy:
                   retry_on: reset,refused-stream,connect-failure,retriable_headers
                   num_retries: 3
                   per_try_timeout: 300s
                   host_selection_retry_max_attempts: 4
                   retriable_headers:
                     name: x-retry-switch
                     string_match:
                       exact: 'on'
                   retry_back_off:
                     base_interval: 0.4s
            - match:
                safe_regex:
                  google_re2: {}
                  regex:  ^(/users/v1).*
              route:
                cluster: biz_user
                idle_timeout: 60s 
                timeout: 300s
                retry_policy:
                  retry_on: reset,refused-stream,connect-failure,retriable_headers
                  num_retries: 3
                  per_try_timeout: 300s
                  host_selection_retry_max_attempts: 4
                  retriable_headers:
                    name: x-retry-switch
                    string_match:
                      exact: 'on'
                  retry_back_off:
                    base_interval: 0.4s                
                 
- "@type": type.googleapis.com/envoy.config.listener.v3.Listener
  name: xshop_admin_connection
  stat_prefix:  xshop_admin
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 10001
  per_connection_buffer_limit_bytes: 2097152
  filter_chains:
  - filters:
      name: envoy.filters.network.http_connection_manager
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        stat_prefix: xshop_admin_http
        server_name: xshop_admin
        merge_slashes: true
        normalize_path: true
        use_remote_address: true
        request_timeout: 300s
        stream_idle_timeout: 60s 
        delayed_close_timeout: 3s
        always_set_request_id_in_response: true
        preserve_external_request_id: true
        access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                   json_format:
                      start_time: "%START_TIME(%Y-%m-%d %H+8:%M:%S)%"
                      request_id: "%REQ(X-REQUEST-ID)%"
                      response_code: "%RESPONSE_CODE%"
                      request: "%REQ(:METHOD)%   %REQ_WITHOUT_QUERY(X-ENVOY-ORIGINAL-PATH?:PATH)%   %PROTOCOL%"
                      duration: "%DURATION%"
                      service_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                      forward: "%REQ(X-FORWARDED-FOR)%"
                      agent: "%REQ(USER-AGENT)%"
                      host: "%REQ(:AUTHORITY)%"
                      upstream_host: "%UPSTREAM_HOST%"
                   formatters:
                   - name: envoy.formatter.req_without_query
                     typed_config:
                      "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery     
        http_filters:
        - name: envoy.filters.http.compressor
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
            response_direction_config:
              common_config:
                min_content_length: 1024
                content_type:
                - text/plain
                - application/json
                - application/x-javascript
                - application/javascript
                - text/css
                - application/xml
              disable_on_etag_header: true
            compressor_library:
              name: text_optimized
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
                memory_level: 5
                window_bits: 12
        - name: envoy.filters.http.lua
          is_optional: false
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
            inline_code: " "
        - name: envoy.filters.http.router
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        rds:
          route_config_name: xshop_admin_router
          config_source:
            path: /share/rds/rds.yaml    
            resource_api_version: v3

       